version: '3'
services:
  bot:
    image: docker.io/fsufitch/tagioalisi-bot
    build:
      context: ./bot-server
      target: bot-runtime
    env_file:
      - defaults.env
      - deploy.bot.env
    ports:
      - "8081:80"
    depends_on:
      - "db"
    networks:
      - tagioalisi

  bot-migrations:
    build:
      context: ./bot-server
      target: bot-migrations
    env_file:
      - defaults.env
      - deploy.bot.env
    depends_on:
      - "db"
    networks:
      - tagioalisi
    command:
      'echo Not running by default; use: docker-compose run bot-migrations /bot/bin/tagioalisi-migrations'

  web:
    image: docker.io/fsufitch/tagioalisi-web
    build:
      context: ./webui
      target: ui-server
    ports:
      - "8080:80"

  db:
    image: "postgres:12"
    environment:
      POSTGRES_USER: tagi
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: tagi
      PGDATA: /var/tagioalisi/db/pgdata
    volumes:
      - type: bind
        source: ./var/db
        target: /var/tagioalisi/db

    networks:
      - tagioalisi


  devcontainer:
    build: 
      context: .
      dockerfile: .devcontainer/Dockerfile

    env_file:
      - defaults.env
      - devcontainer.env
    user: "developer"

    networks:
      - tagioalisi

    ports:
      - "9091:9001"
      - "9090:9000"

    volumes:
      - .:/home/developer/tagioalisi:cached
      - $HOME:/home/developer/host_home:cached

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock 

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    command:
      'echo Not running by default; use VSCode or: docker-compose run devcontainer bash / docker-compose exec devcontainer bash'

networks:
  tagioalisi:
