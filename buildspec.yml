version: 0.2

phases:
  # install:
  #   runtime-versions:
  #     # Not necessary, we're using docker
  #     #golang: 1.15
  pre_build:
    commands:
      - 'echo Versions:'
      - docker version
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 370059773792.dkr.ecr.us-east-1.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - docker build -t tagioalisi-bot .
      - docker tag tagioalisi-bot:latest 370059773792.dkr.ecr.us-east-1.amazonaws.com/tagioalisi-bot:latest    
  
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push 370059773792.dkr.ecr.us-east-1.amazonaws.com/tagioalisi-bot:latest
env:
  exported-variables:
    - API_ENDPOINT

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Entered install phase...
      - pwd
    finally:
      - echo Install phase complete.

  pre_build:
    commands:
      - echo Entered pre-build phase...
      - npm install
      - echo Writing environment to `.env`...
      - printenv > .env
    finally:
      - echo Pre-build phase complete.

  build:
    commands:
      - echo Entered build phase...
      - npm run build
    finally:
      - echo Build phase complete.

  post_build:
    commands:
      - echo Entered post-build phase...
      - echo Nothing to do here.
    finally:
      - echo Post-build phase complete.

artifacts:
  files:
    - dist/*
  discard-paths: yes

cache:
  paths:
    - 'node_modules/**/*'
